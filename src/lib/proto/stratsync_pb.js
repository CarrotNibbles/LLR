// source: stratsync.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.stratsync.DamageOption', null, global);
goog.exportSymbol('proto.stratsync.DeleteEntryEvent', null, global);
goog.exportSymbol('proto.stratsync.DeleteEntryRequest', null, global);
goog.exportSymbol('proto.stratsync.DeletePlayerEvent', null, global);
goog.exportSymbol('proto.stratsync.DeletePlayerRequest', null, global);
goog.exportSymbol('proto.stratsync.Entry', null, global);
goog.exportSymbol('proto.stratsync.EventResponse', null, global);
goog.exportSymbol('proto.stratsync.EventResponse.EventCase', null, global);
goog.exportSymbol('proto.stratsync.InitializationEvent', null, global);
goog.exportSymbol('proto.stratsync.InsertPlayerEvent', null, global);
goog.exportSymbol('proto.stratsync.InsertPlayerRequest', null, global);
goog.exportSymbol('proto.stratsync.Player', null, global);
goog.exportSymbol('proto.stratsync.SubscriptionRequest', null, global);
goog.exportSymbol('proto.stratsync.UpsertDamageOptionEvent', null, global);
goog.exportSymbol('proto.stratsync.UpsertDamageOptionRequest', null, global);
goog.exportSymbol('proto.stratsync.UpsertEntryEvent', null, global);
goog.exportSymbol('proto.stratsync.UpsertEntryRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.SubscriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.SubscriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.SubscriptionRequest.displayName = 'proto.stratsync.SubscriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.DamageOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.DamageOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.DamageOption.displayName = 'proto.stratsync.DamageOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.Player = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.Player, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.Player.displayName = 'proto.stratsync.Player';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.Entry.displayName = 'proto.stratsync.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.InitializationEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stratsync.InitializationEvent.repeatedFields_, null);
};
goog.inherits(proto.stratsync.InitializationEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.InitializationEvent.displayName = 'proto.stratsync.InitializationEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.UpsertDamageOptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.UpsertDamageOptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.UpsertDamageOptionRequest.displayName = 'proto.stratsync.UpsertDamageOptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.UpsertEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.UpsertEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.UpsertEntryRequest.displayName = 'proto.stratsync.UpsertEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.DeleteEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.DeleteEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.DeleteEntryRequest.displayName = 'proto.stratsync.DeleteEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.InsertPlayerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.InsertPlayerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.InsertPlayerRequest.displayName = 'proto.stratsync.InsertPlayerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.DeletePlayerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.DeletePlayerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.DeletePlayerRequest.displayName = 'proto.stratsync.DeletePlayerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.UpsertDamageOptionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.UpsertDamageOptionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.UpsertDamageOptionEvent.displayName = 'proto.stratsync.UpsertDamageOptionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.UpsertEntryEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.UpsertEntryEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.UpsertEntryEvent.displayName = 'proto.stratsync.UpsertEntryEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.DeleteEntryEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.DeleteEntryEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.DeleteEntryEvent.displayName = 'proto.stratsync.DeleteEntryEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.InsertPlayerEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.InsertPlayerEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.InsertPlayerEvent.displayName = 'proto.stratsync.InsertPlayerEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.DeletePlayerEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stratsync.DeletePlayerEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.DeletePlayerEvent.displayName = 'proto.stratsync.DeletePlayerEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stratsync.EventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.stratsync.EventResponse.oneofGroups_);
};
goog.inherits(proto.stratsync.EventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stratsync.EventResponse.displayName = 'proto.stratsync.EventResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.SubscriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.SubscriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.SubscriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.SubscriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    session: jspb.Message.getFieldWithDefault(msg, 1, ""),
    strategy: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.SubscriptionRequest}
 */
proto.stratsync.SubscriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.SubscriptionRequest;
  return proto.stratsync.SubscriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.SubscriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.SubscriptionRequest}
 */
proto.stratsync.SubscriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSession(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrategy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.SubscriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.SubscriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.SubscriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.SubscriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSession();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStrategy();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string session = 1;
 * @return {string}
 */
proto.stratsync.SubscriptionRequest.prototype.getSession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.SubscriptionRequest} returns this
 */
proto.stratsync.SubscriptionRequest.prototype.setSession = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string strategy = 2;
 * @return {string}
 */
proto.stratsync.SubscriptionRequest.prototype.getStrategy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.SubscriptionRequest} returns this
 */
proto.stratsync.SubscriptionRequest.prototype.setStrategy = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.DamageOption.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.DamageOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.DamageOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.DamageOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    damage: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numShared: jspb.Message.getFieldWithDefault(msg, 2, 0),
    primaryTarget: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.DamageOption}
 */
proto.stratsync.DamageOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.DamageOption;
  return proto.stratsync.DamageOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.DamageOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.DamageOption}
 */
proto.stratsync.DamageOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDamage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumShared(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrimaryTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.DamageOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.DamageOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.DamageOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.DamageOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDamage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string damage = 1;
 * @return {string}
 */
proto.stratsync.DamageOption.prototype.getDamage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.DamageOption} returns this
 */
proto.stratsync.DamageOption.prototype.setDamage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 num_shared = 2;
 * @return {number}
 */
proto.stratsync.DamageOption.prototype.getNumShared = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.stratsync.DamageOption} returns this
 */
proto.stratsync.DamageOption.prototype.setNumShared = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stratsync.DamageOption} returns this
 */
proto.stratsync.DamageOption.prototype.clearNumShared = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.DamageOption.prototype.hasNumShared = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string primary_target = 3;
 * @return {string}
 */
proto.stratsync.DamageOption.prototype.getPrimaryTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.DamageOption} returns this
 */
proto.stratsync.DamageOption.prototype.setPrimaryTarget = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stratsync.DamageOption} returns this
 */
proto.stratsync.DamageOption.prototype.clearPrimaryTarget = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.DamageOption.prototype.hasPrimaryTarget = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.Player.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.Player.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.Player} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.Player.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    job: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.Player}
 */
proto.stratsync.Player.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.Player;
  return proto.stratsync.Player.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.Player} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.Player}
 */
proto.stratsync.Player.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJob(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.Player.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.Player.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.Player} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.Player.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJob();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.stratsync.Player.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.Player} returns this
 */
proto.stratsync.Player.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string job = 2;
 * @return {string}
 */
proto.stratsync.Player.prototype.getJob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.Player} returns this
 */
proto.stratsync.Player.prototype.setJob = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    player: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ability: jspb.Message.getFieldWithDefault(msg, 3, ""),
    useAt: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.Entry}
 */
proto.stratsync.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.Entry;
  return proto.stratsync.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.Entry}
 */
proto.stratsync.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbility(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAbility();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUseAt();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.stratsync.Entry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.Entry} returns this
 */
proto.stratsync.Entry.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string player = 2;
 * @return {string}
 */
proto.stratsync.Entry.prototype.getPlayer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.Entry} returns this
 */
proto.stratsync.Entry.prototype.setPlayer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ability = 3;
 * @return {string}
 */
proto.stratsync.Entry.prototype.getAbility = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.Entry} returns this
 */
proto.stratsync.Entry.prototype.setAbility = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 use_at = 4;
 * @return {number}
 */
proto.stratsync.Entry.prototype.getUseAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.stratsync.Entry} returns this
 */
proto.stratsync.Entry.prototype.setUseAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stratsync.InitializationEvent.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.InitializationEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.InitializationEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.InitializationEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.InitializationEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playersList: jspb.Message.toObjectList(msg.getPlayersList(),
    proto.stratsync.Player.toObject, includeInstance),
    damageOptionsList: jspb.Message.toObjectList(msg.getDamageOptionsList(),
    proto.stratsync.DamageOption.toObject, includeInstance),
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.stratsync.Entry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.InitializationEvent}
 */
proto.stratsync.InitializationEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.InitializationEvent;
  return proto.stratsync.InitializationEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.InitializationEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.InitializationEvent}
 */
proto.stratsync.InitializationEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = new proto.stratsync.Player;
      reader.readMessage(value,proto.stratsync.Player.deserializeBinaryFromReader);
      msg.addPlayers(value);
      break;
    case 3:
      var value = new proto.stratsync.DamageOption;
      reader.readMessage(value,proto.stratsync.DamageOption.deserializeBinaryFromReader);
      msg.addDamageOptions(value);
      break;
    case 4:
      var value = new proto.stratsync.Entry;
      reader.readMessage(value,proto.stratsync.Entry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.InitializationEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.InitializationEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.InitializationEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.InitializationEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.stratsync.Player.serializeBinaryToWriter
    );
  }
  f = message.getDamageOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.stratsync.DamageOption.serializeBinaryToWriter
    );
  }
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.stratsync.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.stratsync.InitializationEvent.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.InitializationEvent} returns this
 */
proto.stratsync.InitializationEvent.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Player players = 2;
 * @return {!Array<!proto.stratsync.Player>}
 */
proto.stratsync.InitializationEvent.prototype.getPlayersList = function() {
  return /** @type{!Array<!proto.stratsync.Player>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stratsync.Player, 2));
};


/**
 * @param {!Array<!proto.stratsync.Player>} value
 * @return {!proto.stratsync.InitializationEvent} returns this
*/
proto.stratsync.InitializationEvent.prototype.setPlayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.stratsync.Player=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stratsync.Player}
 */
proto.stratsync.InitializationEvent.prototype.addPlayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.stratsync.Player, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stratsync.InitializationEvent} returns this
 */
proto.stratsync.InitializationEvent.prototype.clearPlayersList = function() {
  return this.setPlayersList([]);
};


/**
 * repeated DamageOption damage_options = 3;
 * @return {!Array<!proto.stratsync.DamageOption>}
 */
proto.stratsync.InitializationEvent.prototype.getDamageOptionsList = function() {
  return /** @type{!Array<!proto.stratsync.DamageOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stratsync.DamageOption, 3));
};


/**
 * @param {!Array<!proto.stratsync.DamageOption>} value
 * @return {!proto.stratsync.InitializationEvent} returns this
*/
proto.stratsync.InitializationEvent.prototype.setDamageOptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.stratsync.DamageOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stratsync.DamageOption}
 */
proto.stratsync.InitializationEvent.prototype.addDamageOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.stratsync.DamageOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stratsync.InitializationEvent} returns this
 */
proto.stratsync.InitializationEvent.prototype.clearDamageOptionsList = function() {
  return this.setDamageOptionsList([]);
};


/**
 * repeated Entry entries = 4;
 * @return {!Array<!proto.stratsync.Entry>}
 */
proto.stratsync.InitializationEvent.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.stratsync.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stratsync.Entry, 4));
};


/**
 * @param {!Array<!proto.stratsync.Entry>} value
 * @return {!proto.stratsync.InitializationEvent} returns this
*/
proto.stratsync.InitializationEvent.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.stratsync.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stratsync.Entry}
 */
proto.stratsync.InitializationEvent.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.stratsync.Entry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stratsync.InitializationEvent} returns this
 */
proto.stratsync.InitializationEvent.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.UpsertDamageOptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.UpsertDamageOptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.UpsertDamageOptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.UpsertDamageOptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    damageOption: (f = msg.getDamageOption()) && proto.stratsync.DamageOption.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.UpsertDamageOptionRequest}
 */
proto.stratsync.UpsertDamageOptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.UpsertDamageOptionRequest;
  return proto.stratsync.UpsertDamageOptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.UpsertDamageOptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.UpsertDamageOptionRequest}
 */
proto.stratsync.UpsertDamageOptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = new proto.stratsync.DamageOption;
      reader.readMessage(value,proto.stratsync.DamageOption.deserializeBinaryFromReader);
      msg.setDamageOption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.UpsertDamageOptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.UpsertDamageOptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.UpsertDamageOptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.UpsertDamageOptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDamageOption();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stratsync.DamageOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.stratsync.UpsertDamageOptionRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.UpsertDamageOptionRequest} returns this
 */
proto.stratsync.UpsertDamageOptionRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DamageOption damage_option = 2;
 * @return {?proto.stratsync.DamageOption}
 */
proto.stratsync.UpsertDamageOptionRequest.prototype.getDamageOption = function() {
  return /** @type{?proto.stratsync.DamageOption} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.DamageOption, 2));
};


/**
 * @param {?proto.stratsync.DamageOption|undefined} value
 * @return {!proto.stratsync.UpsertDamageOptionRequest} returns this
*/
proto.stratsync.UpsertDamageOptionRequest.prototype.setDamageOption = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.UpsertDamageOptionRequest} returns this
 */
proto.stratsync.UpsertDamageOptionRequest.prototype.clearDamageOption = function() {
  return this.setDamageOption(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.UpsertDamageOptionRequest.prototype.hasDamageOption = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.UpsertEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.UpsertEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.UpsertEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.UpsertEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entry: (f = msg.getEntry()) && proto.stratsync.Entry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.UpsertEntryRequest}
 */
proto.stratsync.UpsertEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.UpsertEntryRequest;
  return proto.stratsync.UpsertEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.UpsertEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.UpsertEntryRequest}
 */
proto.stratsync.UpsertEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = new proto.stratsync.Entry;
      reader.readMessage(value,proto.stratsync.Entry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.UpsertEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.UpsertEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.UpsertEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.UpsertEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stratsync.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.stratsync.UpsertEntryRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.UpsertEntryRequest} returns this
 */
proto.stratsync.UpsertEntryRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Entry entry = 2;
 * @return {?proto.stratsync.Entry}
 */
proto.stratsync.UpsertEntryRequest.prototype.getEntry = function() {
  return /** @type{?proto.stratsync.Entry} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.Entry, 2));
};


/**
 * @param {?proto.stratsync.Entry|undefined} value
 * @return {!proto.stratsync.UpsertEntryRequest} returns this
*/
proto.stratsync.UpsertEntryRequest.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.UpsertEntryRequest} returns this
 */
proto.stratsync.UpsertEntryRequest.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.UpsertEntryRequest.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.DeleteEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.DeleteEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.DeleteEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.DeleteEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.DeleteEntryRequest}
 */
proto.stratsync.DeleteEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.DeleteEntryRequest;
  return proto.stratsync.DeleteEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.DeleteEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.DeleteEntryRequest}
 */
proto.stratsync.DeleteEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.DeleteEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.DeleteEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.DeleteEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.DeleteEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.stratsync.DeleteEntryRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.DeleteEntryRequest} returns this
 */
proto.stratsync.DeleteEntryRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.stratsync.DeleteEntryRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.DeleteEntryRequest} returns this
 */
proto.stratsync.DeleteEntryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.InsertPlayerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.InsertPlayerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.InsertPlayerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.InsertPlayerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    player: (f = msg.getPlayer()) && proto.stratsync.Player.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.InsertPlayerRequest}
 */
proto.stratsync.InsertPlayerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.InsertPlayerRequest;
  return proto.stratsync.InsertPlayerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.InsertPlayerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.InsertPlayerRequest}
 */
proto.stratsync.InsertPlayerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = new proto.stratsync.Player;
      reader.readMessage(value,proto.stratsync.Player.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.InsertPlayerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.InsertPlayerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.InsertPlayerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.InsertPlayerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stratsync.Player.serializeBinaryToWriter
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.stratsync.InsertPlayerRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.InsertPlayerRequest} returns this
 */
proto.stratsync.InsertPlayerRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Player player = 2;
 * @return {?proto.stratsync.Player}
 */
proto.stratsync.InsertPlayerRequest.prototype.getPlayer = function() {
  return /** @type{?proto.stratsync.Player} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.Player, 2));
};


/**
 * @param {?proto.stratsync.Player|undefined} value
 * @return {!proto.stratsync.InsertPlayerRequest} returns this
*/
proto.stratsync.InsertPlayerRequest.prototype.setPlayer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.InsertPlayerRequest} returns this
 */
proto.stratsync.InsertPlayerRequest.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.InsertPlayerRequest.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.DeletePlayerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.DeletePlayerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.DeletePlayerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.DeletePlayerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.DeletePlayerRequest}
 */
proto.stratsync.DeletePlayerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.DeletePlayerRequest;
  return proto.stratsync.DeletePlayerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.DeletePlayerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.DeletePlayerRequest}
 */
proto.stratsync.DeletePlayerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.DeletePlayerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.DeletePlayerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.DeletePlayerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.DeletePlayerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.stratsync.DeletePlayerRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.DeletePlayerRequest} returns this
 */
proto.stratsync.DeletePlayerRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.stratsync.DeletePlayerRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.DeletePlayerRequest} returns this
 */
proto.stratsync.DeletePlayerRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.UpsertDamageOptionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.UpsertDamageOptionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.UpsertDamageOptionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.UpsertDamageOptionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    damageOption: (f = msg.getDamageOption()) && proto.stratsync.DamageOption.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.UpsertDamageOptionEvent}
 */
proto.stratsync.UpsertDamageOptionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.UpsertDamageOptionEvent;
  return proto.stratsync.UpsertDamageOptionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.UpsertDamageOptionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.UpsertDamageOptionEvent}
 */
proto.stratsync.UpsertDamageOptionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stratsync.DamageOption;
      reader.readMessage(value,proto.stratsync.DamageOption.deserializeBinaryFromReader);
      msg.setDamageOption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.UpsertDamageOptionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.UpsertDamageOptionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.UpsertDamageOptionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.UpsertDamageOptionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDamageOption();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stratsync.DamageOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional DamageOption damage_option = 1;
 * @return {?proto.stratsync.DamageOption}
 */
proto.stratsync.UpsertDamageOptionEvent.prototype.getDamageOption = function() {
  return /** @type{?proto.stratsync.DamageOption} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.DamageOption, 1));
};


/**
 * @param {?proto.stratsync.DamageOption|undefined} value
 * @return {!proto.stratsync.UpsertDamageOptionEvent} returns this
*/
proto.stratsync.UpsertDamageOptionEvent.prototype.setDamageOption = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.UpsertDamageOptionEvent} returns this
 */
proto.stratsync.UpsertDamageOptionEvent.prototype.clearDamageOption = function() {
  return this.setDamageOption(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.UpsertDamageOptionEvent.prototype.hasDamageOption = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.UpsertEntryEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.UpsertEntryEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.UpsertEntryEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.UpsertEntryEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.stratsync.Entry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.UpsertEntryEvent}
 */
proto.stratsync.UpsertEntryEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.UpsertEntryEvent;
  return proto.stratsync.UpsertEntryEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.UpsertEntryEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.UpsertEntryEvent}
 */
proto.stratsync.UpsertEntryEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stratsync.Entry;
      reader.readMessage(value,proto.stratsync.Entry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.UpsertEntryEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.UpsertEntryEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.UpsertEntryEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.UpsertEntryEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stratsync.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional Entry entry = 1;
 * @return {?proto.stratsync.Entry}
 */
proto.stratsync.UpsertEntryEvent.prototype.getEntry = function() {
  return /** @type{?proto.stratsync.Entry} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.Entry, 1));
};


/**
 * @param {?proto.stratsync.Entry|undefined} value
 * @return {!proto.stratsync.UpsertEntryEvent} returns this
*/
proto.stratsync.UpsertEntryEvent.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.UpsertEntryEvent} returns this
 */
proto.stratsync.UpsertEntryEvent.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.UpsertEntryEvent.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.DeleteEntryEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.DeleteEntryEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.DeleteEntryEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.DeleteEntryEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.DeleteEntryEvent}
 */
proto.stratsync.DeleteEntryEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.DeleteEntryEvent;
  return proto.stratsync.DeleteEntryEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.DeleteEntryEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.DeleteEntryEvent}
 */
proto.stratsync.DeleteEntryEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.DeleteEntryEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.DeleteEntryEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.DeleteEntryEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.DeleteEntryEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.stratsync.DeleteEntryEvent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.DeleteEntryEvent} returns this
 */
proto.stratsync.DeleteEntryEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.InsertPlayerEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.InsertPlayerEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.InsertPlayerEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.InsertPlayerEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    player: (f = msg.getPlayer()) && proto.stratsync.Player.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.InsertPlayerEvent}
 */
proto.stratsync.InsertPlayerEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.InsertPlayerEvent;
  return proto.stratsync.InsertPlayerEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.InsertPlayerEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.InsertPlayerEvent}
 */
proto.stratsync.InsertPlayerEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stratsync.Player;
      reader.readMessage(value,proto.stratsync.Player.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.InsertPlayerEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.InsertPlayerEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.InsertPlayerEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.InsertPlayerEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stratsync.Player.serializeBinaryToWriter
    );
  }
};


/**
 * optional Player player = 1;
 * @return {?proto.stratsync.Player}
 */
proto.stratsync.InsertPlayerEvent.prototype.getPlayer = function() {
  return /** @type{?proto.stratsync.Player} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.Player, 1));
};


/**
 * @param {?proto.stratsync.Player|undefined} value
 * @return {!proto.stratsync.InsertPlayerEvent} returns this
*/
proto.stratsync.InsertPlayerEvent.prototype.setPlayer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.InsertPlayerEvent} returns this
 */
proto.stratsync.InsertPlayerEvent.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.InsertPlayerEvent.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.DeletePlayerEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.DeletePlayerEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.DeletePlayerEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.DeletePlayerEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.DeletePlayerEvent}
 */
proto.stratsync.DeletePlayerEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.DeletePlayerEvent;
  return proto.stratsync.DeletePlayerEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.DeletePlayerEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.DeletePlayerEvent}
 */
proto.stratsync.DeletePlayerEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.DeletePlayerEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.DeletePlayerEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.DeletePlayerEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.DeletePlayerEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.stratsync.DeletePlayerEvent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stratsync.DeletePlayerEvent} returns this
 */
proto.stratsync.DeletePlayerEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.stratsync.EventResponse.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.stratsync.EventResponse.EventCase = {
  EVENT_NOT_SET: 0,
  INITIALIZATION_EVENT: 1,
  UPSERT_DAMAGE_OPTION_EVENT: 2,
  UPSERT_ENTRY_EVENT: 3,
  DELETE_ENTRY_EVENT: 4,
  INSERT_PLAYER_EVENT: 5,
  DELETE_PLAYER_EVENT: 6
};

/**
 * @return {proto.stratsync.EventResponse.EventCase}
 */
proto.stratsync.EventResponse.prototype.getEventCase = function() {
  return /** @type {proto.stratsync.EventResponse.EventCase} */(jspb.Message.computeOneofCase(this, proto.stratsync.EventResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stratsync.EventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.stratsync.EventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stratsync.EventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.EventResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    initializationEvent: (f = msg.getInitializationEvent()) && proto.stratsync.InitializationEvent.toObject(includeInstance, f),
    upsertDamageOptionEvent: (f = msg.getUpsertDamageOptionEvent()) && proto.stratsync.UpsertDamageOptionEvent.toObject(includeInstance, f),
    upsertEntryEvent: (f = msg.getUpsertEntryEvent()) && proto.stratsync.UpsertEntryEvent.toObject(includeInstance, f),
    deleteEntryEvent: (f = msg.getDeleteEntryEvent()) && proto.stratsync.DeleteEntryEvent.toObject(includeInstance, f),
    insertPlayerEvent: (f = msg.getInsertPlayerEvent()) && proto.stratsync.InsertPlayerEvent.toObject(includeInstance, f),
    deletePlayerEvent: (f = msg.getDeletePlayerEvent()) && proto.stratsync.DeletePlayerEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stratsync.EventResponse}
 */
proto.stratsync.EventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stratsync.EventResponse;
  return proto.stratsync.EventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stratsync.EventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stratsync.EventResponse}
 */
proto.stratsync.EventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stratsync.InitializationEvent;
      reader.readMessage(value,proto.stratsync.InitializationEvent.deserializeBinaryFromReader);
      msg.setInitializationEvent(value);
      break;
    case 2:
      var value = new proto.stratsync.UpsertDamageOptionEvent;
      reader.readMessage(value,proto.stratsync.UpsertDamageOptionEvent.deserializeBinaryFromReader);
      msg.setUpsertDamageOptionEvent(value);
      break;
    case 3:
      var value = new proto.stratsync.UpsertEntryEvent;
      reader.readMessage(value,proto.stratsync.UpsertEntryEvent.deserializeBinaryFromReader);
      msg.setUpsertEntryEvent(value);
      break;
    case 4:
      var value = new proto.stratsync.DeleteEntryEvent;
      reader.readMessage(value,proto.stratsync.DeleteEntryEvent.deserializeBinaryFromReader);
      msg.setDeleteEntryEvent(value);
      break;
    case 5:
      var value = new proto.stratsync.InsertPlayerEvent;
      reader.readMessage(value,proto.stratsync.InsertPlayerEvent.deserializeBinaryFromReader);
      msg.setInsertPlayerEvent(value);
      break;
    case 6:
      var value = new proto.stratsync.DeletePlayerEvent;
      reader.readMessage(value,proto.stratsync.DeletePlayerEvent.deserializeBinaryFromReader);
      msg.setDeletePlayerEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stratsync.EventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stratsync.EventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stratsync.EventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stratsync.EventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInitializationEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stratsync.InitializationEvent.serializeBinaryToWriter
    );
  }
  f = message.getUpsertDamageOptionEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stratsync.UpsertDamageOptionEvent.serializeBinaryToWriter
    );
  }
  f = message.getUpsertEntryEvent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.stratsync.UpsertEntryEvent.serializeBinaryToWriter
    );
  }
  f = message.getDeleteEntryEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.stratsync.DeleteEntryEvent.serializeBinaryToWriter
    );
  }
  f = message.getInsertPlayerEvent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.stratsync.InsertPlayerEvent.serializeBinaryToWriter
    );
  }
  f = message.getDeletePlayerEvent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.stratsync.DeletePlayerEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional InitializationEvent initialization_event = 1;
 * @return {?proto.stratsync.InitializationEvent}
 */
proto.stratsync.EventResponse.prototype.getInitializationEvent = function() {
  return /** @type{?proto.stratsync.InitializationEvent} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.InitializationEvent, 1));
};


/**
 * @param {?proto.stratsync.InitializationEvent|undefined} value
 * @return {!proto.stratsync.EventResponse} returns this
*/
proto.stratsync.EventResponse.prototype.setInitializationEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.stratsync.EventResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.EventResponse} returns this
 */
proto.stratsync.EventResponse.prototype.clearInitializationEvent = function() {
  return this.setInitializationEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.EventResponse.prototype.hasInitializationEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UpsertDamageOptionEvent upsert_damage_option_event = 2;
 * @return {?proto.stratsync.UpsertDamageOptionEvent}
 */
proto.stratsync.EventResponse.prototype.getUpsertDamageOptionEvent = function() {
  return /** @type{?proto.stratsync.UpsertDamageOptionEvent} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.UpsertDamageOptionEvent, 2));
};


/**
 * @param {?proto.stratsync.UpsertDamageOptionEvent|undefined} value
 * @return {!proto.stratsync.EventResponse} returns this
*/
proto.stratsync.EventResponse.prototype.setUpsertDamageOptionEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.stratsync.EventResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.EventResponse} returns this
 */
proto.stratsync.EventResponse.prototype.clearUpsertDamageOptionEvent = function() {
  return this.setUpsertDamageOptionEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.EventResponse.prototype.hasUpsertDamageOptionEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UpsertEntryEvent upsert_entry_event = 3;
 * @return {?proto.stratsync.UpsertEntryEvent}
 */
proto.stratsync.EventResponse.prototype.getUpsertEntryEvent = function() {
  return /** @type{?proto.stratsync.UpsertEntryEvent} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.UpsertEntryEvent, 3));
};


/**
 * @param {?proto.stratsync.UpsertEntryEvent|undefined} value
 * @return {!proto.stratsync.EventResponse} returns this
*/
proto.stratsync.EventResponse.prototype.setUpsertEntryEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.stratsync.EventResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.EventResponse} returns this
 */
proto.stratsync.EventResponse.prototype.clearUpsertEntryEvent = function() {
  return this.setUpsertEntryEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.EventResponse.prototype.hasUpsertEntryEvent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DeleteEntryEvent delete_entry_event = 4;
 * @return {?proto.stratsync.DeleteEntryEvent}
 */
proto.stratsync.EventResponse.prototype.getDeleteEntryEvent = function() {
  return /** @type{?proto.stratsync.DeleteEntryEvent} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.DeleteEntryEvent, 4));
};


/**
 * @param {?proto.stratsync.DeleteEntryEvent|undefined} value
 * @return {!proto.stratsync.EventResponse} returns this
*/
proto.stratsync.EventResponse.prototype.setDeleteEntryEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.stratsync.EventResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.EventResponse} returns this
 */
proto.stratsync.EventResponse.prototype.clearDeleteEntryEvent = function() {
  return this.setDeleteEntryEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.EventResponse.prototype.hasDeleteEntryEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional InsertPlayerEvent insert_player_event = 5;
 * @return {?proto.stratsync.InsertPlayerEvent}
 */
proto.stratsync.EventResponse.prototype.getInsertPlayerEvent = function() {
  return /** @type{?proto.stratsync.InsertPlayerEvent} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.InsertPlayerEvent, 5));
};


/**
 * @param {?proto.stratsync.InsertPlayerEvent|undefined} value
 * @return {!proto.stratsync.EventResponse} returns this
*/
proto.stratsync.EventResponse.prototype.setInsertPlayerEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.stratsync.EventResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.EventResponse} returns this
 */
proto.stratsync.EventResponse.prototype.clearInsertPlayerEvent = function() {
  return this.setInsertPlayerEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.EventResponse.prototype.hasInsertPlayerEvent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DeletePlayerEvent delete_player_event = 6;
 * @return {?proto.stratsync.DeletePlayerEvent}
 */
proto.stratsync.EventResponse.prototype.getDeletePlayerEvent = function() {
  return /** @type{?proto.stratsync.DeletePlayerEvent} */ (
    jspb.Message.getWrapperField(this, proto.stratsync.DeletePlayerEvent, 6));
};


/**
 * @param {?proto.stratsync.DeletePlayerEvent|undefined} value
 * @return {!proto.stratsync.EventResponse} returns this
*/
proto.stratsync.EventResponse.prototype.setDeletePlayerEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.stratsync.EventResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stratsync.EventResponse} returns this
 */
proto.stratsync.EventResponse.prototype.clearDeletePlayerEvent = function() {
  return this.setDeletePlayerEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stratsync.EventResponse.prototype.hasDeletePlayerEvent = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.stratsync);
